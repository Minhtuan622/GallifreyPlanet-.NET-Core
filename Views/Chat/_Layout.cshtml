@using Humanizer
@model GallifreyPlanet.ViewModels.Chat.ChatManagerViewModel

@{
    ViewData["Title"] = "Chat Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string defaultAvatarPath = "/uploads/accounts/default-avatar.jpg";
}

@section Styles {
    @await RenderSectionAsync("Styles", required: false)

    <link rel="stylesheet" href="~/css/chat.css">
}

<div class="chat-container rounded-3">
    <div class="row g-0 h-100">
        <!-- Sidebar -->
        <div class="col-md-4 col-lg-3 chat-sidebar">
            <div class="sidebar-header">
                <h5 class="mb-3">Messages</h5>
                <div class="input-container">
                    <i class="fas fa-search text-muted"></i>
                    <input type="text" id="search-conversations" placeholder="Tìm kiếm cuộc trò chuyện...">
                </div>
            </div>

            <!-- Conversation List -->
            <div class="conversation-list">
                @if (Model.Conversations is not null && Model.User is not null)
                {
                    foreach (var conversation in Model.Conversations)
                    {
                        var members = conversation.Members?.Where(m => m?.Id != Model.User.Id).ToList();

                        if (members?.Count == 1)
                        {
                            var member = members[0];
                            var avatar = member!.Avatar ?? defaultAvatarPath;
                            var isRead = conversation.IsRead;

                            <a asp-action="Chat" asp-route-conversationId="@conversation.Id" class="text-decoration-none">
                                <div class="conversation-item hover-bg">
                                    <div class="position-relative">
                                        <img src="@avatar" class="rounded-circle" width="48" height="48" alt="User">
                                        <span class="status-dot bg-success"></span>
                                    </div>
                                    <div class="conversation-content ms-3">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">@member.Name</h6>
                                            <small class="text-muted">@conversation.CreatedAt.Humanize()</small>
                                        </div>
                                        <p class="text-muted small text-truncate mb-0 @(isRead ? "" : "fw-bold")">
                                            @conversation.LatestMessage
                                        </p>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                }
            </div>
        </div>
        @RenderBody()
    </div>
</div>

@section Scripts {
    @await RenderSectionAsync("Scripts", required: false)

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}